name: build-deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the ci branch
  push:
    branches: [develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # hack to bypass node warning
  CI: false
  NINJA_NPM_TOKEN: ${{ secrets.NINJA_NPM_TOKEN }}
  REACT_APP_GAME_SERVER_HOST: staging-api.supremacy.game
  REACT_APP_PASSPORT_WEB: https://staging-passport.xsyn.io
  REACT_APP_PASSPORT_SERVER_HOST: staging-passport.xsyn.io
  REACT_APP_STREAM_SITE_SYD: https://staging-watch-syd02.supremacy.game/WebRTCAppEE/play.html?name=886200805704583109786601
  REACT_APP_STREAM_SITE: http://staging-watch-local-am.supremacy.game:5080/WebRTCAppEE/play.html?name=524280586954581049507513

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # setup nodejs env
      - name: Setup nodejs
        uses: actions/setup-node@v2
        with:
            node-version: "14"

      # setup ssh connection requirements
      - name: Setup SSH
        run: |
          mkdir ~/.ssh
          echo -e "Host ${{ secrets.STAGING_SSH_HOST }}\n  User ${{ secrets.STAGING_SSH_USER }}\n  Port ${{ secrets.STAGING_SSH_PORT }}" >> ~/.ssh/config
          echo '${{ secrets.STAGING_KNOWN_HOSTS }}' > ~/.ssh/known_hosts
          echo '${{ secrets.STAGING_SSH_PKEY }}' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      # cache npm dependencies
      # https://www.voorhoede.nl/en/blog/super-fast-npm-install-on-github-actions/
      - name: Cache npm
        id: cache
        uses: actions/cache@v2
        with:
            path: ./node_modules
            key: modules-${{ hashFiles('./package-lock.json') }}

      # install npm dependencies
      - name: Install npm packages
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --ignore-scripts

      - name: Build web
        run: npm run build

      # list build folder recursively
      - name: List build dir
        run: find build

      # use rsync directly cuz make deploy hides error/failure (github action shows a tick instead of fail)
      - name: Rsync to server
        run: rsync -av --delete build/ staging-watch.supremacy.game:/var/www/html
